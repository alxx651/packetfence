---
### COMMON PARAMETERS
before_script:
  - unset http_proxy ; unset https_proxy
  - env | grep ^CI_

### STAGES
stages:
  - build_images
  - build_pkg
  - sign
  - publish
  - install
  - upload

### VARIABLES
variables:
  CIDIR: ci
  PACKERDIR: $CIDIR/packer
  RPM_DIR: rpm
  DEB_DIR: debian
  VAGRANT_DIR: addons/vagrant

### TEMPLATES
.pfbuild_job:
  stage: build_images
  tags:
    - shell

.build_job:
  stage: build_pkg
  artifacts:
    expire_in: 1 day
    paths:
      - result/*
  # only run jobs on schedules *OR* on "stable" refs (for release) *OR* via "Run pipeline"
  only:
    - schedules
    - web
    - /^stable$/
    - /^devel$/
  tags:
    - docker

# use artifact from *sign* because we upload an existing Debian repo
.deploy_deb_job:
  stage: upload
  dependencies:
    - sign
  variables:
    #DEPLOY_USER: see GitLab variables
    DEB_DEPLOY_DIR: ${CI_ENVIRONMENT_NAME}
    DEPLOY_UPDATE: "ci-repo-deploy deb ${CI_ENVIRONMENT_NAME}"
  script:
    - ./$CIDIR/upload/deploy-packages.sh deb
  # run job on runners tag with inverse AND shell
  tags:
    - inverse
    - shell

# use artifact from *pages* job to upload only RPMS, not src.rpm
.deploy_rpm_job:
  stage: upload
  dependencies:
    - pages
  variables:
    #DEPLOY_USER: see GitLab variables
    RPM_DEPLOY_DIR: ${CI_ENVIRONMENT_NAME}
    DEPLOY_UPDATE: "ci-repo-deploy rpm ${CI_ENVIRONMENT_NAME}"
  script:
    - ./$CIDIR/upload/deploy-packages.sh rpm
  only:
    - schedules
    - /^devel$/
  # run job on runners tag with inverse AND shell
  tags:
    - inverse
    - shell

.rpm_script:
  script:
    - cp $RPM_DIR/.rpmmacros $HOME
    - ci-build-pkg $RPM_DIR

.deb_script:
  script:
    - ./$CIDIR/debian/convert-to-native-package.sh
    - cp $CIDIR/debian/.devscripts $HOME
    - quilt push
    - ci-build-pkg $DEB_DIR
  variables:
    QUILT_PATCHES: $DEB_DIR/patches


### STAGES

#### BUILD_IMAGES JOBS
pfbuild_manual:
  extends: .pfbuild_job
  script:
    - make -e -C $PACKERDIR pfbuild
  # job need to be explicitly started
  # will not block other stages/jobs
  # will not run when we click "Run pipeline"
  when: manual

# build a docker image at release
# used to build maintenance binaries and assets for maintenance
pfbuild_release:
  extends: .pfbuild_job
  script:
    - PF_VERSION=$(awk '{ print $2 }' conf/pf-release)
    - make -e -C $PACKERDIR DOCKER_TAG=$PF_VERSION pfbuild
  only:
    - /^stable$/

#### BUILD_PKG JOBS
build_pkg_centos7:
  image: inverseinc/pfbuild-centos-7
  extends:
    - .build_job
    - .rpm_script

build_pkg_debian_stretch:
  image: inverseinc/pfbuild-debian-stretch
  extends:
    - .build_job
    - .deb_script

### SIGN JOBS
sign:
  # only use when executor is docker
  image: buildpkg/debian:buster
  stage: sign
  script:
    - ci-sign-pkg
  dependencies:
    - build_pkg_centos7
    - build_pkg_debian_stretch
  artifacts:
    expire_in: 1 day
    paths:
      - result/*
  only:
    - schedules
    - web
    - /^stable$/
    - /^devel$/
  tags:
    - shell

### PUBLISH JOBS
pages:
  # only use when executor is docker
  image: buildpkg/debian:buster
  stage: publish
  variables:
    PAGES_DIR: public
    PAGES_HOST: gitlab.io
  environment:
    name: PPA
    url: http://${CI_PROJECT_NAMESPACE}.${PAGES_HOST}/${CI_PROJECT_NAME}
  script:
    - ci-pages-ppa
    - ci-pages-home
    - ci-pages-tree
  dependencies:
    - sign
  artifacts:
    expire_in: 1 day
    paths:
      - public
  only:
    - schedules
    - web
    - /^stable$/
    - /^devel$/
  tags:
    - shell

### UPLOAD JOBS
deploy_rpm_devel:
  extends:
    - .deploy_rpm_job
  environment:
    name: devel/x86_64
    url: http://inverse.ca/downloads/PacketFence/RHEL7/${CI_ENVIRONMENT_SLUG}
  only:
    - schedules
    - /^devel$/

deploy_rpm_release:
  extends:
    - .deploy_rpm_job
  environment:
    name: x86_64
    url: http://inverse.ca/downloads/PacketFence/RHEL7/${CI_ENVIRONMENT_NAME}
  only:
    - /^stable$/

deploy_deb_devel:
  extends:
    - .deploy_deb_job
  environment:
    name: debian-devel
    url: http://inverse.ca/downloads/PacketFence/${CI_ENVIRONMENT_NAME}
  only:
    - schedules
    - /^devel$/

deploy_deb_release:
  extends:
    - .deploy_deb_job
  environment:
    name: debian-lastrelease
    url: http://inverse.ca/downloads/PacketFence/${CI_ENVIRONMENT_NAME}
  only:
    - /^stable$/
